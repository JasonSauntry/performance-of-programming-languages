/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package benchmarkJava;

import java.lang.Integer;
import java.util.function.Function;
import java.lang.IllegalArgumentException;

import benchmarkJava.MatrixNaive;
import benchmarkJava.MatrixOpt;
import benchmarkJava.SortStdlib;
import benchmarkJava.Heap;

public class App {
    public static void main(String[] args) {
        final String module;
        if (args.length > 0) {
            module = args[0];
        } else {
            module = null;
        }

        int size = 4;
        if (args.length > 1) {
            size = Integer.parseInt(args[1]);
        }

        Function<Integer, Long> act = (Integer s) -> MatrixNaive.act(s);
        switch (module) {
            case "matmul_naive":
                act = (Integer s) -> MatrixNaive.act(s);
                break;
            case "matmul_opt":
                act = (Integer s) -> MatrixOpt.act(s);
                break;
            case "sort_stdlib":
                act = (Integer s) -> SortStdlib.act(s);
                break;
            case "heap":
                act = (Integer s) -> Heap.act(s);
                break;
            default:
                act = (Integer s) -> {
                    throw new IllegalArgumentException(String.format(
                                "Invalid subcommand to run: %s", module));
                };
        }

        long time = act.apply(size);

        System.out.println(String.format("time: %d\n", time));
    }
}
