\BOOKMARK [1][-]{section.1}{Testing\040Methodology}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{Choice\040of\040Benchmarks}{section.1}% 2
\BOOKMARK [3][-]{subsubsection.1.1.1}{Cannonical\040Matrix\040Multiplication}{subsection.1.1}% 3
\BOOKMARK [3][-]{subsubsection.1.1.2}{Optimized\040Matrix\040Multiplication}{subsection.1.1}% 4
\BOOKMARK [3][-]{subsubsection.1.1.3}{Sorting}{subsection.1.1}% 5
\BOOKMARK [3][-]{subsubsection.1.1.4}{Heap}{subsection.1.1}% 6
\BOOKMARK [2][-]{subsection.1.2}{Data\040Extraction}{section.1}% 7
\BOOKMARK [1][-]{section.2}{Results}{}% 8
\BOOKMARK [2][-]{subsection.2.1}{Cannonical\040Matrix\040Multiplication}{section.2}% 9
\BOOKMARK [2][-]{subsection.2.2}{Heap}{section.2}% 10
\BOOKMARK [2][-]{subsection.2.3}{Standard\040Library\040Sorting}{section.2}% 11
\BOOKMARK [2][-]{subsection.2.4}{Optimized\040Matrix\040Multiplication}{section.2}% 12
\BOOKMARK [1][-]{section.3}{Analysis}{}% 13
\BOOKMARK [2][-]{subsection.3.1}{Why\040Python\040is\040so\040Slow}{section.3}% 14
\BOOKMARK [2][-]{subsection.3.2}{Java\040Memory\040Overhead}{section.3}% 15
\BOOKMARK [2][-]{subsection.3.3}{Why\040Sorting\040in\040Python\040isn't\040Terrible}{section.3}% 16
\BOOKMARK [2][-]{subsection.3.4}{Why\040Python's\040Numpy\040is\040Fast}{section.3}% 17
\BOOKMARK [1][-]{section.4}{Conclusion}{}% 18
